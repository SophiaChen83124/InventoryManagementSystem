
@{
    ViewData["Title"] = "重設密碼";
    Layout = "~/Views/Shared/_ViewBindLine.cshtml";
}

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-xl-6 col-11">
            <section id="app" class="card" v-cloak>
                <h1 class="card-header h3 text-center">重設密碼</h1>
                <div class="card-body">
                    <p class="alert alert-success text-center"
                       :hidden="!hasReset || resetFailed">
                        修改成功
                    </p>
                    <p class="alert alert-danger text-center"
                       @*:show="!isProcessing && hasReset && resetFailed"*@
                       :hidden="isProcessing || !hasReset || !resetFailed">修改失敗，請再試一次或<a asp-controller="User" asp-action="ForgetPassword">重新取得修改密碼連結</a></p>
                    <p class="alert alert-info text-center"
                       :hidden="!isLoading">驗證身份中……請稍候</p>
                    <p class="alert alert-danger text-center"
                       :hidden="isLoading || tokenValid">連結已過期</p>
                    <form :hidden="isLoading || !tokenValid">
                        <div class="form-group">
                            <label for="password">新密碼</label>
                            <input class="form-control"
                                   name="password"
                                   id="password"
                                   type="password"
                                   v-model="memberInfo.password" />
                        </div>

                        <div class="form-group">
                            <label for="passwordCheck">確認新密碼</label>
                            <input class="form-control"
                                   name="passwordCheck"
                                   id="passwordCheck"
                                   type="password"
                                   v-model="passwordCheck" />
                        </div>
                        <div class="form-group text-center">
                            <button class="btn btn-primary btn-block"
                                    type="submit"
                                    :disabled="!canSubmit"
                                    @@click="submitForm($event)">
                                送出
                            </button>
                        </div>
                    </form>
                </div>
                <div class="card-footer text-center">
                    <p><a asp-controller="User" asp-action="Authenticate">回到登入頁</a></p>
                </div>
            </section>
        </div>
    </div>
</div>
<script>
    let app = new Vue({
        el: "#app",
        data() {
            return {
                memberInfo: {
                    password: "",
                    token: ""
                },
                passwordCheck: "",
                isLoading: true,
                isProcessing: false,
                tokenValid: false,
                hasReset: false,
                resetFailed: false,
            }
        },
        created() {

            let params = new URLSearchParams(window.location.search);

            let tokenParam = new URLSearchParams({
                "token": params.get("token")
            });
            fetch("/api/user/password/validatetoken", {
                method: "POST",
                body: tokenParam
            })
                .then(r => {
                    this.isLoading = false;

                    if (r.ok) {
                        this.tokenValid = true;
                        this.memberInfo.token = params.get("token");
                    }
                    else {
                        console.log("not ok")
                    }
                })
        },
        methods: {
            async submitForm(e) {
                // 不要真的 submit
                e.preventDefault();

                this.isProcessing = true;
                this.hasReset = true;

                let response = await fetch("/api/user/password/reset/", {
                    method: "POST",
                    body: new URLSearchParams(this.memberInfo)
                }).catch(err => {
                    console.log(err);
                    this.resetFailed = true;
                });

                if (!response.ok) {
                    console.log("修改失敗");
                    this.resetFailed = true;
                }
                else {
                    this.resetFailed = false;
                }

                console.log("修改成功");
                this.isProcessing = false;
            }
        },
        computed: {
            canSubmit() {
                let r = /\w{6,50}/;
                return r.test(this.memberInfo.password) &&
                    this.passwordCheck === this.memberInfo.password &&
                    !this.isProcessing &&
                    (!this.hasReset || this.resetFailed);
                
            }
        }
    });
</script>
