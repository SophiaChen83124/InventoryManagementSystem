
@{
    ViewData["Title"] = "會員註冊";
}

<div class="row justify-content-center">
    <div class="col-xl-8 col-12">
        <section class="card">
            <h1 class="card-header">會員註冊</h1>
            <form method="post" class="card-body">
                <label for="email">電子信箱</label>
                <div class="input-group">
                    <input v-model="info.email"
                           @@change="validateUniqueField(emailValidationClass, $event, 'email')"
                           :class="['form-control', emailValidationClass]"
                           type="email"
                           name="email"
                           id="email" />
                    <div class="input-group-append">
                        <span class="input-group-text">@@</span>
                        @*<button class="btn btn-info input-group-text">檢查電子信箱</button>*@
                    </div>
                </div>

                <div class="form-group">
                    <label for="username">使用者名稱</label>
                    <input v-model="info.username"
                           @@change="validateUniqueField(usernameValidationClass, $event, 'username')"
                           :class="['form-control', usernameValidationClass]"
                           type="text"
                           name="username"
                           id="username" />
                </div>

                <div class="form-group">
                    <label for="password">密碼</label>
                    <input v-model="info.password"
                           @@input="validatePw()"
                           :class="['form-control', pwClass]"
                           type="password"
                           name="password"
                           id="password" />
                </div>

                <div class="form-group">
                    <label for="pw-check">確認密碼</label>
                    <input v-model="pwCheck"
                           @@input="validatePw()"
                           :class="['form-control', pwCheckClass]"
                           type="password"
                           id="pw-check" />
                </div>

                <div class="form-group">
                    <label for="fullName">全名</label>
                    <input v-model="info.fullname" class="form-control" type="text" name="fullName" id="fullName" />
                </div>

                <div class="form-group">
                    <label>姓別</label>
                    <input @@change="selectGender" type="radio" name="gender" id="male" value="M" />
                    <label for="male">男</label>
                    <input @@change="selectGender" type="radio" name="gender" id="female" value="F" />
                    <label for="female">女</label>
                    <input @@change="selectGender" type="radio" name="gender" id="unspecified" value="X" />
                    <label for="unspecified">不透露</label>
                </div>

                <div class="form-group">
                    <label for="dateOfBirth">生日</label>
                    <input v-model="info.dateOfBirth" type="date" name="dateOfBirth" id="dateOfBirth" />
                </div>

                <div class="form-group">
                    <label for="phoneNumber">手機</label>
                    <input v-model="info.phoneNumber"
                           @@change="validateUniqueField(phoneNumberValidationClass, $event, 'phoneNumber')"
                           :class="['form-control', phoneNumberValidationClass]"
                           type="tel"
                           name="phoneNumber"
                           id="phoneNumber" />
                </div>

                <div class="form-group">
                    <label for="address">地址</label>
                    <input v-model="info.address" class="form-control" type="text" name="address" id="address" />
                </div>

                <div class="form-group">
                    <label for="lineAccount">LINE 帳號</label>
                    <input v-model="info.lineAccount" class="form-control" type="text" name="lineAccount" id="lineAccount" />
                </div>

                <div class="form-check">
                    <input v-model="info.allowNotification" class="form-check-input" type="checkbox" name="allowNotification" id="allowNotification" />
                    <label class="form-check-label" for="allowNotification">我要接收逾期提醒</label>
                </div>

                <div class="form-check">
                    <input class="form-check-input" type="checkbox" name="agreeToToC" id="agreeToToC" />
                    <label class="form-check-label" for="agreeToToC">我已閱讀並同意<a href="#">服務條款</a></label>
                </div>
                <div class="form-group text-center">
                    <button @@click="clickSignUp" class="btn btn-primary btn-lg" :disabled="btnIsDisabled" type="button">註冊</button>
                </div>
            </form>
        </section>
    </div>
</div>

<script>
    let apiURLs = {
        signUp: "api/user",
        validate: "api/user/validate"
    };
    let form = new Vue({
        el: ".card-body",
        data() {
            return {
                info: {
                    gender: "X",
                    allowNotification: false
                },
                emailValidationClass: {
                    "is-valid": false,
                    "is-invalid": false
                },
                usernameValidationClass: {
                    "is-valid": false,
                    "is-invalid": false
                },
                phoneNumberValidationClass: {
                    "is-valid": false,
                    "is-invalid": false
                },
                pwClass: {
                    "is-valid": false,
                    "is-invalid": false
                },
                pwCheckClass: {
                    "is-valid": false,
                    "is-invalid": false
                },
                pwCheck: ""
            };
        },
        methods: {
            // TODO 註冊鈕
            async clickSignUp(e) {
                let response = await fetch(apiURLs.signUp, {
                    method: "POST",
                    body: JSON.stringify(this.info),
                    headers: {
                        "content-type": "application/json"
                    }
                });

                if (!response.ok) {
                    console.error("不OK");
                    return;
                }

                console.log("OK");
            },
            selectGender(e) {
                this.info.gender = e.target.value;
            },
            async validateUniqueField(validationClass, e, field) {
                validationClass["is-valid"] = false;
                validationClass["is-invalid"] = false;
                let validationURL = apiURLs.validate + `?validatedField=${field}&value=${e.target.value}`;
                let response = await fetch(validationURL, {
                    method: "GET"
                });
                if (!response.ok)
                    throw new Error(`HTTP error! status: ${response.status}`);

                let available = await response.json();

                if(available)
                    validationClass["is-valid"] = true;
                else
                    validationClass["is-invalid"] = true;
            },
            validatePw() {
                this.pwClass["is-valid"] = false;
                this.pwClass["is-invalid"] = false;
                this.pwCheckClass["is-valid"] = false;
                this.pwCheckClass["is-invalid"] = false;

                // 驗證密碼符合規則
                if (this.info.password.length < 6)
                    this.pwClass["is-invalid"] = true;
                else
                    this.pwClass["is-valid"] = true;

                // 驗證確認密碼與密碼一致
                if (this.pwCheck !== this.info.password)
                    this.pwCheckClass["is-invalid"] = true;
                else
                    this.pwCheckClass["is-valid"] = true;

            }
        },
        computed: {
            btnIsDisabled() {
                return !this.emailValidationClass["is-valid"] ||
                    !this.usernameValidationClass["is-valid"] ||
                    !this.phoneNumberValidationClass["is-valid"];
            }
        }
    });
</script>
