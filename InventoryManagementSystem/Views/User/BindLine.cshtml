
@{
    ViewData["Title"] = "綁定 LINE 帳號";
    Layout = "~/Views/Shared/_ViewBindLine.cshtml";
}

<div class="row justify-content-center form-container">
    <div class="col-xl-6 col-11">
        <div id="bind" class="card">
            <h1 class="card-header h3 text-center">{{title}}</h1>
            <div class="card-body "
                 :hidden="!LIFFInitialized || !unbound">
                <div class="card-text alert alert-danger text-center"
                     :hidden="!errorOccurred">{{errorText}}</div>
                <form>
                    <div class="form-group">
                        <label for="username">帳號</label>
                        <input class="form-control form-control-lg"
                               name="username"
                               id="username"
                               type="text"
                               v-model="userInfo.username"
                               required />
                    </div>
                    <div class="form-group">
                        <label for="password">密碼</label>
                        <input class="form-control form-control-lg"
                               name="password"
                               id="password"
                               type="password"
                               v-model="userInfo.password" 
                               required />
                    </div>
                    <div class="form-group text-center">
                        <button class="btn btn-block btn-primary btn-lg"
                                type="button"
                                :disabled="processing || userInfo.username.length <= 0 || userInfo.password.length <= 0"
                                @@click="btnBind">
                            {{btnText}}
                        </button>
                    </div>

                    <div class="form-group text-center">
                        <button class="btn btn-secondary btn-block btn-lg"
                                type="button"
                                :disabled="processing"
                                @@click="btnClose">
                            關閉
                        </button>
                    </div>
                </form>
            </div>

            <div class="card-body"
                      :hidden="!LIFFInitialized || unbound">
                <div class="card-text alert alert-danger text-center"
                     :hidden="!errorOccurred">{{errorText}}</div>
                <form>
                    <div class="form-group text-center">
                        <button class="btn btn-block btn-danger btn-lg"
                                type="button"
                                :disabled="processing"
                                @@click="btnUnbind">
                            {{btnText}}
                        </button>
                    </div>

                    <div class="form-group text-center">
                        <button class="btn btn-secondary btn-block btn-lg"
                                type="button"
                                :disabled="processing"
                                @@click="btnClose">
                            關閉
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<script>
    let app = new Vue({
        el: "#bind",
        data() {
            return {
                LIFFInitialized: false,
                unbound: true,
                userInfo: {
                    username: "",
                    password: "",
                    idToken: ""
                },
                processing: false,
                btnText: "讀取中",
                title: "確認綁定狀態中……",
                errorOccurred: false,
                errorText: ""
            }
        },
        created() {
            liff
                .init({
                    liffId: "1656261928-NBKLAmEY"
                })
                .then(async () => {
                    // start to use LIFF's api
                    this.userInfo.idToken = liff.getIDToken();
                    let response = await fetch("/api/user/checkunbound/", {
                        method: "POST",
                        body: new URLSearchParams({
                            "idToken": this.userInfo.idToken
                        })
                    }).catch(err => alert(err));

                    if (!response.ok) {
                        let failText = await response.text();
                        alert(failText);
                        return;
                    }

                    this.unbound = await response.json().catch(err => alert(err));
                    this.LIFFInitialized = true;

                    if (this.unbound) {
                        this.title = "帳號綁定";
                        this.btnText = "登入";
                    }
                    else {
                        this.title = "解除綁定";
                        this.btnText = "確認解除";
                    }
                })
                .catch((err) => {
                    console.log(err);
                });
        },
        methods: {
            async btnBind(e) {
                e.preventDefault();

                this.processing = true;
                this.btnText = "處理中，請稍候";

                let response = await fetch("/api/user/bindline", {
                    method: "POST",
                    headers: {
                        "content-type": "application/json"
                    },
                    body: JSON.stringify(this.userInfo)
                });

                if (!response.ok) {
                    // TODO 錯誤訊息
                    this.errorText = await response.text();
                    this.errorOccurred = true;


                    this.processing = false;
                    this.btnText = "登入";

                    return;
                }

                liff.closeWindow();
            },
            async btnUnbind() {

                this.processing = true;
                this.btnText = "處理中，請稍候";

                let token = this.userInfo.idToken;
                let response = await fetch("/api/user/unbindline", {
                    method: "POST",
                    body: new URLSearchParams({
                        "idToken": token
                    })
                })

                if (!response.ok) {
                    this.errorText = await response.text();
                    this.errorOccurred = true;

                    this.processing = false;
                    this.btnText = "確認解除"
                    return;
                }

                liff.closeWindow();
            },
            btnClose() {
                liff.closeWindow();
            }
        }
    });

</script>
