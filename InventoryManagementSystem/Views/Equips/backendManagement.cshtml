@{ 
    ViewData["Title"] = "設備管理";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
<link type="text/css"
      rel="stylesheet"
      href="https://unpkg.com/bootstrap/dist/css/bootstrap.min.css" />
<link type="text/css"
      rel="stylesheet"
      href="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.css" />
<script src="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.js"></script>


<div id="addItem" v-cloak>
    <!-- Qry Colum -->
    <b-overlay :show="loading" rounded="lg">
        <div :show="!loading">
            <div class="card">
                <div class="card-header" style="font-weight: bold;">物品新增</div>
                <div class="card-body">
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label>設備種類&nbsp;&nbsp;&nbsp;</label>
                            <select class="btn btn-light dropdown-toggle" v-on:change="onCategoryChange($event)" v-model="selectCateId">
                                <option disabled selected>請先選擇種類</option>
                                <option v-for="cname in category" :value="cname.equipCategoryId">{{cname.categoryName}}</option>
                            </select>&nbsp;&nbsp;&nbsp;
                            <i class="bi bi-plus-circle-dotted" style="font-size:30px;" data-toggle="modal" data-target="#addNewCate"></i>
                            &nbsp;&nbsp;&nbsp;<i class="bi bi-dash-circle-dotted" style="font-size: 30px;" @@click="deletCateModal"></i>
                        </div>

                        <div class="form-group col-md-4">
                            <label>設備名稱&nbsp;&nbsp;&nbsp;</label>
                            <select class="btn btn-light dropdown-toggle" style="width:144px;" v-on:change="onEquipNameChange($event)" v-model="selectEquipId">
                                <option disabled selected>請選擇名稱</option>
                                <option v-for="ename in equips" :value="ename.equipmentId">{{ename.equipmentName}}-{{ename.equipmentSn}}</option>
                            </select>&nbsp;&nbsp;&nbsp;
                            <i class="bi bi-plus-circle-dotted" style="font-size: 30px;" data-toggle="modal" data-target="#addNewEquip"></i>
                            &nbsp;&nbsp;&nbsp;<i class="bi bi-dash-circle-dotted" style="font-size:30px;" @@click="deletEquipModal"></i>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label>物品序號</label>
                            <span> <input type="text" class="form-control" m-r-0 v-model="addItemSN" /></span>

                        </div>
                        <div class="form-group col-md-4">
                            <label>物品描述</label>
                            <span><input type="text" class="form-control" m-r-0 v-model="addItemDiscrip" /></span>
                        </div>
                    </div>
                </div>
                <button type="button" class="btn btn btn-primary btn-block" v-on:click="addNewItem" :disabled="itemAdddisabled">新增</button>
            </div>
            <br />
            <br />
            <!-- View Table -->
            <div class="card">
                <div class="card-header" style="font-weight: bold;">物品序號管理</div>
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                <input aria-label="Checkbox" type="checkbox" v-model="deletAll_checkbox" @@click="deletAllSelect($event)"><i class="form-icon"></i>
                            </th>
                            <th scope="col" style="font-weight: normal;">設備種類</th>
                            <th scope="col" style="font-weight: normal;">設備名稱</th>
                            <th scope="col" style="font-weight: normal;">物品序號</th>
                            <th scope="col" style="font-weight: normal;">物品描述</th>
                            <th scope="col" style="font-weight: normal;">修改</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="item in items">
                            <td>
                                <input aria-label="Checkbox" type="checkbox" v-model="deletAllItem_checkbox" :value="item.itemId" @@change="updateDeletAll"><i class="form-icon"></i>
                            </td>
                            <td>{{item.categoryName}}</td>
                            <td>{{item.equipmentName}}-{{item.equipmentSn}}</td>
                            <td><input v-if="updateItem.includes(item.itemId)" v-model="item.itemSn" class="form-control" size="1" /><span v-else>{{item.itemSn}}</span></td>
                            <td><input v-if="updateItem.includes(item.itemId)" v-model="item.description" class="form-control" size="1" /><span v-else>{{item.description}}</span></td>
                            <td>
                                <i class="bi bi-trash-fill" @@click="btnDelItem(item.itemId)" style="font-size: 20px;"></i>
                                <span v-if="updateItem.includes(item.itemId)">
                                    <i class="bi bi-check-square fa-3x" @@click="btnUpdConfirm(item)" style="font-size: 20px;"></i>
                                </span>
                                <span v-else>
                                    <i class="bi bi-pencil-square fa-10x" @@click="btnUpdItem(item.itemId)" style="font-size: 20px;"></i>
                                </span>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <buttion v-if="deletAllItem_checkbox.length>0" type="button" class="btn btn-danger" @@click="deletAllAction($event)">一次刪除</buttion>
            </div>
        </div>
    </b-overlay>
    <br />
    <br />
    <br />
    <br />

    <!-- addNewCateModal -->
    <div class="modal fade" id="addNewCate" @*tabindex="-1"*@ role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill-rule="evenodd" d="M16 12a4 4 0 11-8 0 4 4 0 018 0zm-1.5 0a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path><path fill-rule="evenodd" d="M12 1c-.268 0-.534.01-.797.028-.763.055-1.345.617-1.512 1.304l-.352 1.45c-.02.078-.09.172-.225.22a8.45 8.45 0 00-.728.303c-.13.06-.246.044-.315.002l-1.274-.776c-.604-.368-1.412-.354-1.99.147-.403.348-.78.726-1.129 1.128-.5.579-.515 1.387-.147 1.99l.776 1.275c.042.069.059.185-.002.315-.112.237-.213.48-.302.728-.05.135-.143.206-.221.225l-1.45.352c-.687.167-1.249.749-1.304 1.512a11.149 11.149 0 000 1.594c.055.763.617 1.345 1.304 1.512l1.45.352c.078.02.172.09.22.225.09.248.191.491.303.729.06.129.044.245.002.314l-.776 1.274c-.368.604-.354 1.412.147 1.99.348.403.726.78 1.128 1.129.579.5 1.387.515 1.99.147l1.275-.776c.069-.042.185-.059.315.002.237.112.48.213.728.302.135.05.206.143.225.221l.352 1.45c.167.687.749 1.249 1.512 1.303a11.125 11.125 0 001.594 0c.763-.054 1.345-.616 1.512-1.303l.352-1.45c.02-.078.09-.172.225-.22.248-.09.491-.191.729-.303.129-.06.245-.044.314-.002l1.274.776c.604.368 1.412.354 1.99-.147.403-.348.78-.726 1.129-1.128.5-.579.515-1.387.147-1.99l-.776-1.275c-.042-.069-.059-.185.002-.315.112-.237.213-.48.302-.728.05-.135.143-.206.221-.225l1.45-.352c.687-.167 1.249-.749 1.303-1.512a11.125 11.125 0 000-1.594c-.054-.763-.616-1.345-1.303-1.512l-1.45-.352c-.078-.02-.172-.09-.22-.225a8.469 8.469 0 00-.303-.728c-.06-.13-.044-.246-.002-.315l.776-1.274c.368-.604.354-1.412-.147-1.99-.348-.403-.726-.78-1.128-1.129-.579-.5-1.387-.515-1.99-.147l-1.275.776c-.069.042-.185.059-.315-.002a8.465 8.465 0 00-.728-.302c-.135-.05-.206-.143-.225-.221l-.352-1.45c-.167-.687-.749-1.249-1.512-1.304A11.149 11.149 0 0012 1zm-.69 1.525a9.648 9.648 0 011.38 0c.055.004.135.05.162.16l.351 1.45c.153.628.626 1.08 1.173 1.278.205.074.405.157.6.249a1.832 1.832 0 001.733-.074l1.275-.776c.097-.06.186-.036.228 0 .348.302.674.628.976.976.036.042.06.13 0 .228l-.776 1.274a1.832 1.832 0 00-.074 1.734c.092.195.175.395.248.6.198.547.652 1.02 1.278 1.172l1.45.353c.111.026.157.106.161.161a9.653 9.653 0 010 1.38c-.004.055-.05.135-.16.162l-1.45.351a1.833 1.833 0 00-1.278 1.173 6.926 6.926 0 01-.25.6 1.832 1.832 0 00.075 1.733l.776 1.275c.06.097.036.186 0 .228a9.555 9.555 0 01-.976.976c-.042.036-.13.06-.228 0l-1.275-.776a1.832 1.832 0 00-1.733-.074 6.926 6.926 0 01-.6.248 1.833 1.833 0 00-1.172 1.278l-.353 1.45c-.026.111-.106.157-.161.161a9.653 9.653 0 01-1.38 0c-.055-.004-.135-.05-.162-.16l-.351-1.45a1.833 1.833 0 00-1.173-1.278 6.928 6.928 0 01-.6-.25 1.832 1.832 0 00-1.734.075l-1.274.776c-.097.06-.186.036-.228 0a9.56 9.56 0 01-.976-.976c-.036-.042-.06-.13 0-.228l.776-1.275a1.832 1.832 0 00.074-1.733 6.948 6.948 0 01-.249-.6 1.833 1.833 0 00-1.277-1.172l-1.45-.353c-.111-.026-.157-.106-.161-.161a9.648 9.648 0 010-1.38c.004-.055.05-.135.16-.162l1.45-.351a1.833 1.833 0 001.278-1.173 6.95 6.95 0 01.249-.6 1.832 1.832 0 00-.074-1.734l-.776-1.274c-.06-.097-.036-.186 0-.228.302-.348.628-.674.976-.976.042-.036.13-.06.228 0l1.274.776a1.832 1.832 0 001.734.074 6.95 6.95 0 01.6-.249 1.833 1.833 0 001.172-1.277l.353-1.45c.026-.111.106-.157.161-.161z"></path></svg> 新增種類</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-row">
                        <div class="form-group col-md-4">
                            <label class="col-form-label">設備種類</label>
                            <input type="text" class="form-control" v-model="addNewCateName">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">取消</button>
                        <button type="button" class="btn btn-primary" v-on:click="addNewCate" :disabled="addCateDisabled">新增</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
      

    <div>
        <b-modal id="deletCate">
            <template #modal-title>
                <i class="bi bi-trash"></i>
                <span><a class="font-weight-bold">確認刪除設備種類</a></span>
            </template>
            <b-table-simple caption-top stacked>
                <b-thead head-variant="dark">
                    <b-tr>
                        <b-th class="text-left">設備種類</b-th>
                    </b-tr>
                </b-thead>
                <b-tbody>
                    <b-tr>
                        <b-td stacked-heading="設備種類">{{selectCateName}}</b-td>
                    </b-tr>
                </b-tbody>
            </b-table-simple>
            <template #modal-footer>
                <div>
                    <button type="button" class="btn btn-danger" v-on:click="deletCate" style="text-align:right;">刪除</button>
                </div>
            </template>
        </b-modal>
    </div>

    <!-- addNewEquipModal -->
    <div class="modal fade" id="addNewEquip" @*tabindex="-1"*@ role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill-rule="evenodd" d="M16 12a4 4 0 11-8 0 4 4 0 018 0zm-1.5 0a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path><path fill-rule="evenodd" d="M12 1c-.268 0-.534.01-.797.028-.763.055-1.345.617-1.512 1.304l-.352 1.45c-.02.078-.09.172-.225.22a8.45 8.45 0 00-.728.303c-.13.06-.246.044-.315.002l-1.274-.776c-.604-.368-1.412-.354-1.99.147-.403.348-.78.726-1.129 1.128-.5.579-.515 1.387-.147 1.99l.776 1.275c.042.069.059.185-.002.315-.112.237-.213.48-.302.728-.05.135-.143.206-.221.225l-1.45.352c-.687.167-1.249.749-1.304 1.512a11.149 11.149 0 000 1.594c.055.763.617 1.345 1.304 1.512l1.45.352c.078.02.172.09.22.225.09.248.191.491.303.729.06.129.044.245.002.314l-.776 1.274c-.368.604-.354 1.412.147 1.99.348.403.726.78 1.128 1.129.579.5 1.387.515 1.99.147l1.275-.776c.069-.042.185-.059.315.002.237.112.48.213.728.302.135.05.206.143.225.221l.352 1.45c.167.687.749 1.249 1.512 1.303a11.125 11.125 0 001.594 0c.763-.054 1.345-.616 1.512-1.303l.352-1.45c.02-.078.09-.172.225-.22.248-.09.491-.191.729-.303.129-.06.245-.044.314-.002l1.274.776c.604.368 1.412.354 1.99-.147.403-.348.78-.726 1.129-1.128.5-.579.515-1.387.147-1.99l-.776-1.275c-.042-.069-.059-.185.002-.315.112-.237.213-.48.302-.728.05-.135.143-.206.221-.225l1.45-.352c.687-.167 1.249-.749 1.303-1.512a11.125 11.125 0 000-1.594c-.054-.763-.616-1.345-1.303-1.512l-1.45-.352c-.078-.02-.172-.09-.22-.225a8.469 8.469 0 00-.303-.728c-.06-.13-.044-.246-.002-.315l.776-1.274c.368-.604.354-1.412-.147-1.99-.348-.403-.726-.78-1.128-1.129-.579-.5-1.387-.515-1.99-.147l-1.275.776c-.069.042-.185.059-.315-.002a8.465 8.465 0 00-.728-.302c-.135-.05-.206-.143-.225-.221l-.352-1.45c-.167-.687-.749-1.249-1.512-1.304A11.149 11.149 0 0012 1zm-.69 1.525a9.648 9.648 0 011.38 0c.055.004.135.05.162.16l.351 1.45c.153.628.626 1.08 1.173 1.278.205.074.405.157.6.249a1.832 1.832 0 001.733-.074l1.275-.776c.097-.06.186-.036.228 0 .348.302.674.628.976.976.036.042.06.13 0 .228l-.776 1.274a1.832 1.832 0 00-.074 1.734c.092.195.175.395.248.6.198.547.652 1.02 1.278 1.172l1.45.353c.111.026.157.106.161.161a9.653 9.653 0 010 1.38c-.004.055-.05.135-.16.162l-1.45.351a1.833 1.833 0 00-1.278 1.173 6.926 6.926 0 01-.25.6 1.832 1.832 0 00.075 1.733l.776 1.275c.06.097.036.186 0 .228a9.555 9.555 0 01-.976.976c-.042.036-.13.06-.228 0l-1.275-.776a1.832 1.832 0 00-1.733-.074 6.926 6.926 0 01-.6.248 1.833 1.833 0 00-1.172 1.278l-.353 1.45c-.026.111-.106.157-.161.161a9.653 9.653 0 01-1.38 0c-.055-.004-.135-.05-.162-.16l-.351-1.45a1.833 1.833 0 00-1.173-1.278 6.928 6.928 0 01-.6-.25 1.832 1.832 0 00-1.734.075l-1.274.776c-.097.06-.186.036-.228 0a9.56 9.56 0 01-.976-.976c-.036-.042-.06-.13 0-.228l.776-1.275a1.832 1.832 0 00.074-1.733 6.948 6.948 0 01-.249-.6 1.833 1.833 0 00-1.277-1.172l-1.45-.353c-.111-.026-.157-.106-.161-.161a9.648 9.648 0 010-1.38c.004-.055.05-.135.16-.162l1.45-.351a1.833 1.833 0 001.278-1.173 6.95 6.95 0 01.249-.6 1.832 1.832 0 00-.074-1.734l-.776-1.274c-.06-.097-.036-.186 0-.228.302-.348.628-.674.976-.976.042-.036.13-.06.228 0l1.274.776a1.832 1.832 0 001.734.074 6.95 6.95 0 01.6-.249 1.833 1.833 0 001.172-1.277l.353-1.45c.026-.111.106-.157.161-.161z"></path></svg> 新增設備</h5>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-row">
                        <div class="form-group col-md-4">
                            <label class="col-form-label">設備種類</label>
                            <select class="form-control" v-model="addEquipCateId" required>
                                <option v-for="cname in category" :value="cname.equipCategoryId">
                                    {{cname.categoryName}}
                                </option>
                            </select>
                        </div>

                        <div class="form-group col-md-4">
                            <label class="col-form-label">設備序號</label>
                            <input type="text" class="form-control" v-model="addEquipSN" required>
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="col-form-label">設備名稱</label>
                        <input type="text" class="form-control" v-model="addEquipName" required>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label class="col-form-label">設備品牌</label>
                            <input type="text" class="form-control" v-model="addEquipBrand">
                        </div>
                        <div class="form-group col-md-6">
                            <label class="col-form-label">設備型號</label>
                            <input type="text" class="form-control" v-model="addEquipModel">
                        </div>
                        <div class="form-group col-md-4">
                            <label class="col-form-label">設備單價</label>
                            <input type="text" class="form-control" v-model="addEquipPrice">
                        </div>
                        <div class="form-group col-md-8">
                            <label class="col-form-label">設備描述</label>
                            <input type="text" class="form-control" v-model="addEquipDiscrip">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">取消</button>
                        <button type="button" class="btn btn-primary" v-on:click="addNewEquip" :disabled="addNewEquipRequired">確認</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- deletEquipModal -->
    <div>
        <b-modal id="deletEquip" scrollable>
            <template #modal-title>
                <i class="bi bi-trash"></i>
                <span><a class="font-weight-bold">確認刪除設備</a></span>
            </template>
            <b-table-simple caption-top stacked>
                <b-thead head-variant="dark">
                    <b-tr>
                        <b-th class="text-left">設備種類</b-th>
                        <b-th class="text-left">設備序號</b-th>
                        <b-th class="text-left">設備名稱</b-th>
                        <b-th class="text-left">設備品牌</b-th>
                        <b-th class="text-left">設備型號</b-th>
                        <b-th class="text-left">設備單價</b-th>
                        <b-th class="text-left">設備描述</b-th>

                    </b-tr>
                </b-thead>
                <b-tbody>
                    <b-tr>
                        <b-td stacked-heading="設備種類">{{selectCateName}}</b-td>
                        <b-td stacked-heading="設備序號">{{selectEquipSn}}</b-td>
                        <b-td stacked-heading="設備名稱">{{selectEquipName}}</b-td>
                        <b-td stacked-heading="設備品牌">{{checkEquipBrand}}</b-td>
                        <b-td stacked-heading="設備型號">{{checkEquipModel}}</b-td>
                        <b-td stacked-heading="設備單價">{{selectEquipPrice}}</b-td>
                        <b-td stacked-heading="設備描述">{{checkEquipDescri}}</b-td>
                    </b-tr>
                </b-tbody>
            </b-table-simple>
            <template #modal-footer>
                <div>
                    <button type="button" class="btn btn-danger" v-on:click="deletEquip" style="text-align:right;">刪除</button>
                </div>
            </template>
        </b-modal>
    </div>

</div>

</div>

<script>
    var addItem = new Vue({
        el: '#addItem',
        data: {
            loading: true,
            equips: [],
            category: [],
            items: [],
            selectCateId: '',
            selectCateName: '',
            selectEquipId: '',
            selectEquipSn: '',
            selectEquipName: '',
            selectEquipBrand: '',
            selectEquipModel: '',
            selectEquipPrice: '',
            selectEquipDescri: '',
            addItemSN: "",
            addItemDiscrip: "",
            addNewCateName: "",
            equipCategoryId: "",
            addEquipCateId: "",
            addEquipName: "",
            addEquipSN: "",
            addEquipBrand: "",
            addEquipModel: "",
            addEquipPrice: 0,
            addEquipDiscrip: "",
            deletItems_send: [],
            deletAll_checkbox: false,
            deletAllItem_checkbox:[],
            deletItemId: '',
            updateItem: [],
            deletEquipIds: []
        },

        beforeCreate: function () {

            
            fetch('/EquipCategoryApi/GetCates', { method: 'GET' })
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    }
                })
                .then(response => {
                    this.category = response;
                    this.loading= false;

                });

        },

        methods: {

            onCategoryChange: function (data) {
                this.loading= true;
                this.deletAll_checkbox = false;
                this.deletAllItem_checkbox = [];
                this.selectEquipId = "";
                this.items = [];
                this.selectCateId = data.target.value;
                let catePackage = this.category.find(e => e.equipCategoryId === this.selectCateId);
                this.selectCateName = catePackage.categoryName;

                fetch('/equipapi/GetEquipByCateId/' + data.target.value, { method: 'GET' })
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        }
                    })
                    .then(response => {
                        this.equips = response;
                        this.loading= false;
                    })
            },

            onEquipNameChange: function () {
                this.loading = true;
                this.deletAll_checkbox = false;
                this.deletAllItem_checkbox = [];
                this.getdata();
                this.loading = false;
                let selectEquipPackage = this.equips.find(x => x.equipmentId == this.selectEquipId)
                this.selectEquipSn = selectEquipPackage.equipmentSn;
                this.selectEquipName = selectEquipPackage.equipmentName;
                this.selectEquipBrand = selectEquipPackage.brand;
                this.selectEquipModel = selectEquipPackage.model;
                this.selectEquipPrice = selectEquipPackage.unitPrice;
                this.selectEquipDescri = selectEquipPackage.description;
            },

            addNewItem: function () {
                this.loading = true;
                let requestData = {
                    adminId: 1,
                    equipmentId: this.selectEquipId,
                    itemSn: this.addItemSN.trim(),
                    description: this.addItemDiscrip
                };

                let url = "/ItemApi/InsertItem";
                let request = {
                    body: JSON.stringify(requestData),
                    method: "POST",
                    headers: {
                        "content-type": "application/json"
                    }
                };
                fetch(url, request)
                    .then(r => {
                        if (r.ok) {
                            this.loading = false;
                            alert("新增成功");
                            this.getdata();
                            this.addItemSN = "";
                            
                        } else if (r.status == 409){
                            this.loading = false;
                            alert("新增失敗, 請確認是否物品序號重複, 若無請洽網站管理員");

                        }
                    })
                    .catch(error => {
                        
                        console.log(error);
                        this.loading = false;
                        alert("新增失敗,請確認是否物品序號重複,若無請洽網站管理員");
                        
                    })
            },


        

            getdata: function () {
                fetch('/ItemApi/GetItemsByEquipId/' + this.selectEquipId, { method: 'GET' })
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        }
                    })
                    .then(response => {
                        this.items = response;

                    })
            },

            addNewCate: function () {
                this.loading = true;
                let url = "/EquipCategoryApi/InsertCate?Name=" + this.addNewCateName;
                let request = {
                    method: "POST"
                };

                fetch(url, request)
                    .then(r => {
                        
                        if (r.ok) {
                            alert("新增成功");
                            location.reload(true);

                        }
                        
                    })
                    .catch(error => {
                        alert("新增失敗,請確認該種類名稱是否重複,若無請洽網站管理員");
                    })
            },

            deletCate: function () {
                
                let url = "/EquipcategoryApi/DeleteCate/" + this.selectCateId;
                let request = {
                    method: 'Delete',
                    headers: { 'content-type': 'application/json' },
                };
                let msg = "是否確定刪除？";
                if (confirm(msg) == true) {
                    this.loading = true;
                    fetch(url, request)
                        .then(r => {
                            if (r.ok) {
                                this.loading = false;
                                alert("刪除成功");
                                location.reload(true);

                            } else if (r.status == 400) {
                                this.loading = false;
                                alert("刪除失敗, 請確認該種類底下是否已登錄設備與物品資料");

                            } else if (r.status == 404) {
                                this.loading = false;
                                alert("刪除失敗,找不到此種類")

                            } 
                        })
                        .catch(error => {
                            this.loading = false;
                            console.log(error);
                            alert("刪除失敗,資料庫端發生錯誤");

                        })
                } else {
                    return false;
                };

            },

            addNewEquip: function () {

                this.loading = true;
                let requestData = {
                    equipmentCategoryId: this.addEquipCateId,
                    equipmentSn: this.addEquipSN,
                    equipmentName: this.addEquipName,
                    brand: this.addEquipBrand,
                    model: this.addEquipModel,
                    unitPrice: this.addEquipPrice,
                    description: this.addEquipDiscrip

                };
                let url = "/EquipApi/InsertEquip";
                let request = {
                    body: JSON.stringify(requestData),
                    method: "POST",
                    headers: {
                        "content-type": "application/json"
                    }
                }
                fetch(url, request)
                    .then(r => {
                        if (r.ok) {
                            alert("新增成功");
                            location.reload(true);
                        } 
                    })
                    .catch(error => {
                        this.loading = false;
                        console.log(error);
                        alert("新增失敗,請確認是否設備序號重複,若無請洽網站管理員");
                    })

            },

            deletEquipModal: function () {

                this.$bvModal.show("deletEquip");

            },

            deletCateModal: function () {

                this.$bvModal.show("deletCate");

            },

            deletEquip: function () {

                
                this.deletEquipIds.push(this.selectEquipId);
                let url = '/EquipApi/RemoveEquipByIds';
                let request = {
                    method: 'Delete',
                    headers: { 'content-type': 'application/json' },
                    body: JSON.stringify(this.deletEquipIds)
                };
                let msg = "是否確定刪除？";
                if (confirm(msg) == true) {
                    this.loading = true;
                    fetch(url, request)
                        .then(r => {
                            if (r.status == 404) {
                                this.loading = false;
                                alert("刪除失敗,找不到該筆設備資料")
                            } else if (r.status == 400) {
                                this.loading = false;
                                alert("刪除失敗,請確認該設備底下是否已登錄物品資料");
                            } else if (r.status == 409) {
                                this.loading = false;
                                alert("刪除失敗,資料庫端發生錯誤");

                            } else {

                                return r.json();
                            }
                        })
                        .then(data => {

                            if (data === 0) {
                                this.loading = false;
                                alert("刪除失敗,資料庫端發生錯誤");
                            } else if (data > 0) {
                                this.loading = false;
                                alert("刪除成功");
                                this.deletItems_send = [];
                                location.reload(true);
                            } else {

                                return data;
                            }
                        }).catch(error => {
                            this.loading = false;
                            console.log(error);
                            alert("刪除失敗,資料庫端發生錯誤");

                        })
                } else {
                    return false;
                }

            },


            btnDelItem: function (data) {
               
                this.deletItemId = data;
                this.deletItems_send.push(this.deletItemId);
                let url = '/ItemApi/RemoveItemsByIds/';
                let request = {
                    method: 'Delete',
                    headers: { 'content-type': 'application/json' },
                    body: JSON.stringify(this.deletItems_send)
                };
                let msg = "是否確定刪除？";
                if (confirm(msg) == true) {
                    this.loading = true;
                    fetch(url, request)
                        .then(response => {

                            if (response.status == 404) {
                                this.loading = false;
                                alert("刪除失敗,找不到該筆物品資料")
                            } else if (response.status == 400) {
                                this.loading = false;
                                alert("刪除失敗,請確認該物品是否已借出或已刪除");
                            } else if (response.status == 409) {
                                this.loading = false;
                                alert("刪除失敗,資料庫端發生錯誤");

                            } else {

                                return response.json();
                            }
                            
                        })
                        .then(data => {

                            if (data === 0) {
                                this.loading = false;
                                alert("刪除失敗,資料庫端發生錯誤");

                            } else if (data>0) {
                                this.loading = false;
                                alert("刪除成功");
                                this.items = this.items.filter(x => x.itemId !== this.deletItemId);
                                this.deletItems_send = [];
                            } else {

                                return data;
                            }
                        }).catch(error => {
                            this.loading = false;
                            console.log(error);
                            alert("刪除失敗,資料庫端發生錯誤");

                        })
                } else {
                    return false;
                };

            },

            btnUpdItem: function (itemId) {
                this.updateItem = []
                this.updateItem.push(itemId);
            },

            btnUpdConfirm: function (item) {
                this.loading = true;
                this.updateItem = [];
                let temp = {
                    itemId: item.itemId,
                    itemSn: item.itemSn,
                    description: item.description
                };

                let url = '/ItemApi/EditItem/' + item.itemId;
                let request = {
                    method: 'PUT',
                    headers: { 'content-type': 'application/json' },
                    body: JSON.stringify(temp)
                }
                fetch(url, request)
                    .then(response => {
                        if (response.ok) {
                            this.loading = false;
                            alert("修改成功");

                        } else if (response.status == 404) {
                            this.loading = false;
                            alert("修改失敗,找不到該物品資料")

                        } 
                    }).catch(error => {
                        this.loading = false;
                        console.log(error);
                        alert("修改失敗,請確認序號是否重複,若無請洽網站管理員");
                        this.getdata();
                        
                    })
            },

            deletAllSelect: function () {
                this.deletAllItem_checkbox = [];
                if (!this.deletAll_checkbox) {
                    for (let i = 0; i < this.items.length; i++) {
                        this.deletAllItem_checkbox.push(this.items[i].itemId);
                    }
                }
            },

            deletAllAction: function () {
                
                this.deletItems_send = this.deletAllItem_checkbox.map(x => x);
                let url = '/ItemApi/RemoveItemsByIds/';
                let request = {
                    method: 'Delete',
                    headers: { 'content-type': 'application/json' },
                    body: JSON.stringify(this.deletItems_send)
                };

                let msg = "是否確定刪除？";
                if (confirm(msg) == true) {
                    this.loading = true;
                    fetch(url, request)
                        .then(response => {
                            if (response.status == 404) {
                                this.loading = false;
                                alert("刪除失敗,找不到該筆物品資料")
                            } else if (response.status == 400) {
                                this.loading = false;
                                alert("刪除失敗,請確認該物品是否已借出或已刪除");
                            } else if (response.status == 409) {
                                this.loading = false;
                                alert("刪除失敗,資料庫端發生錯誤");

                            } else {

                                return response.json();
                            }

                        })
                        .then(data => {
                            if (data === 0) {
                                this.loading = false;
                                alert("刪除失敗!!!");
                            } else if (data > 0) {
                                this.loading = false;
                                alert("刪除成功");
                                this.items = this.items.filter(x => !this.deletItems_send.includes(x.itemId));
                                this.deletItems_send = [];
                                this.deletAllItem_checkbox= []
                                this.deletAll_checkbox = false;
                            } else {

                                return data;
                            }
                        }).catch(error => {
                            this.loading = false;
                            console.log(error);
                            alert("刪除失敗,資料庫端發生錯誤")

                        })
                } else {
                    return false;
                };
            },

            updateDeletAll: function () {
                console.log("我被點了");
                if (this.deletAllItem_checkbox.length < this.items.length) {

                    return this.deletAll_checkbox = false;
                }

            }
        },

        computed: {


            addNewEquipRequired: function () {

                let equipName = this.addEquipName.trim();
                let equipSn = this.addEquipSN.trim();
                if (equipName == "" || equipSn == "" || this.addEquipPrice == 0)
                    return true;

            },

            checkEquipBrand: function () {

                let brand = ""

                if (this.selectEquipBrand !== null) {

                    brand = "";

                } else {

                    brand = this.selectEquipBrand.trim();
                }


                if (brand == "") {

                    return "未填寫"
                } else {

                    return this.selectEquipBrand;

                }

            },

            checkEquipModel: function () {

                let equipModel = ""

                if (this.selectEquipModel !== null) {

                    equipModel = "";

                } else {

                    equipModel = this.selectEquipModel.trim();
                }

                if (equipModel == "") {

                    return "未填寫"
                } else {

                    return this.selectEquipModel;

                }

            },

            checkEquipDescri: function () {

                let Descri = ""

                if (this.selectEquipDescri == null) {

                    Descri = "";

                } else {

                    Descri = this.selectEquipDescri.trim();
                }


                if (Descri == "") {

                    return "未填寫"
                } else {

                    return this.selectEquipDescri;

                }
            },

            itemAdddisabled() {

                return this.addItemSN.trim() == "";

            },
            addCateDisabled() {

                return this.addNewCateName.trim() == "";

            }
        }

      
    })
</script>
